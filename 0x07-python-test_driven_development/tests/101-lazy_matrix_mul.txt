Testing the  ``lazy_matrix_mul``  function from  ``100-lazy_matrix_mul``  module 
============================================================================


Importing the  ``lazy_matrix_mul``  function:
    >>> lazy_matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul


____________________________________________________________________________
[x] -> section 01 - first argument is not a matrix
    >>> lazy_matrix_mul("str", [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul("str", 1.2)
    Traceback (most recent call last):
        ...
    ValueError: Scalar operands are not allowed, use '*' instead


____________________________________________________________________________
[x] -> section 02 - second argument is not a matrix
    >>> lazy_matrix_mul([[1, 2], [3, 4]], "str")
    Traceback (most recent call last):
        ...
    ValueError: Scalar operands are not allowed, use '*' instead


____________________________________________________________________________
[x] -> section 03 - member of matrix is not a list
    >>> lazy_matrix_mul([False, True, "str"], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (3,) and (2,2) not aligned: 3 (dim 0) != 2 (dim 0)

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [False, True, "str"])
    Traceback (most recent call last):
        ...
    ValueError: shapes (2,2) and (3,) not aligned: 2 (dim 1) != 3 (dim 0)


____________________________________________________________________________
[x] -> section 04 - matrix is empty
    >>> lazy_matrix_mul([[]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)


____________________________________________________________________________
[x] -> section 05 - matrices with different row size
    >>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.

    >>> lazy_matrix_mul([[2, 2, 2], [4, 4, 4]], [[2], [3, 3]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence.


____________________________________________________________________________
[x] -> section 06 - unmatched matrices
    >>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10,]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (2,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)


____________________________________________________________________________
[x] -> section 07a - no argument (matrix) provided
    >>> lazy_matrix_mul()
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'


____________________________________________________________________________
[x] -> section 07b - one argument (matrix) provided
    >>> lazy_matrix_mul([[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'


____________________________________________________________________________
[x] -> section 08 - too many arguments (matrices) provided
    >>> lazy_matrix_mul(2, 2, [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() takes 2 positional arguments but 3 were given

    >>> lazy_matrix_mul(2, 2, [[1, 2], [3, 4]], 1)
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() takes 2 positional arguments but 4 were given


____________________________________________________________________________
[x] -> section 09 - only one argument provided
    >>> lazy_matrix_mul([[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'


____________________________________________________________________________
[x] -> section 10 - element of list in list is not numeric
    >>> lazy_matrix_mul([[1, 2], ["str", 1]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: invalid data type for einsum

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], ["str", 1]])
    Traceback (most recent call last):
        ...
    TypeError: invalid data type for einsum


____________________________________________________________________________
[x] -> section 11 - valid matrices
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])
